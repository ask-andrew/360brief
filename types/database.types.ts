export type Provider = 'google' | 'microsoft' | 'slack';

export interface UserToken {
  id: string;
  user_id: string;
  provider: Provider;
  refresh_token: string;
  created_at: string;
  updated_at: string;
}

export interface UserPreferences {
  id: string;
  user_id: string;
  digest_style: 'management' | 'executive' | 'minimal' | 'detailed';
  timezone: string;
  digest_time: string; // e.g., "09:00"
  digest_frequency: 'daily' | 'weekdays' | 'weekly';
  key_contacts: string[]; // Array of email addresses
  priority_keywords: string[];
  created_at: string;
  updated_at: string;
}

// This type will be generated by Supabase, but we define it here for reference
export interface Database {
  public: {
    Tables: {
      user_tokens: {
        Row: UserToken;
        Insert: Omit<UserToken, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<UserToken, 'id' | 'user_id' | 'created_at'>> & {
          updated_at?: string;
        };
      };
      user_preferences: {
        Row: UserPreferences;
        Insert: Omit<UserPreferences, 'id' | 'created_at' | 'updated_at'>;
        Update: Partial<Omit<UserPreferences, 'id' | 'user_id' | 'created_at'>> & {
          updated_at?: string;
        };
      };
    };
  };
}
